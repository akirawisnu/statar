% Generated by roxygen2 (4.0.2): do not edit by hand
\name{join}
\alias{join}
\title{Join two data.tables together}
\usage{
join(x, y, on = intersect(names(x), names(y)), type = "outer",
  gen = FALSE, check = c("m:m", "m:1", "1:m", "1:1"))
}
\arguments{
\item{x}{The master data.table}

\item{y}{The using data.table}

\item{on}{Character vectors for variables to match on. Default to common names between x and y.}

\item{type}{The type of (SQL) join among "outer" (default), "left", "right", "inner", "semi" and "anti"}

\item{gen}{Name of new variable to mark result, or the boolean FALSE (default) if no such variable should be created. The generated variable equals 1 for rows in master only, 2 for rows in using only, 3 for matched rows.}

\item{check}{A character that checks for the presence of duplicates. "m:m" many to many (all pairwise combinations), "1:1" one to one merge, "m:1" many to one merge, "1:m" one to many. Specifying 1 at the rhs or lhs checks that joined variables uniquely identify observations in the master or using dataset.}
}
\value{
A data.table that joins rows in master and using datases. In order to avoid duplicates, identical variable names not joined are renamed with a .x and .y suffixes. Keys are set on master and using data.tables, which avoids the copy of x and y, at the cost of transforming the input data.tables.
}
\description{
Join two data.tables together
}
\examples{
join(x, y, on = intersect(names(x),names(y)), type = "outer", gen = FALSE, check = "m:m")
}

