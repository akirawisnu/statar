% Generated by roxygen2 (4.0.2): do not edit by hand
\name{fuzzy_join}
\alias{fuzzy_join}
\title{Fuzzy join two data.tables together}
\usage{
fuzzy_join(x, y, exact = NULL, exact.or.NA = NULL, fuzzy = NULL,
  gen = "distance", which = FALSE, w = rep(1, length(fuzzy)),
  na.score = 1/3, method = "jw", p = 0.1, ...)
}
\arguments{
\item{x}{The master data.table}

\item{y}{The using data.table}

\item{exact}{Character vector specifying variables on which to match exactly}

\item{exact.or.NA}{Character vector specifying variables that should not differ if both are non missing.}

\item{fuzzy}{Character vector specifying columns on which to match}

\item{gen}{Name of new variable with the distance between matched observations. Default to "distance".}

\item{which}{Boolean. With \code{which = TRUE}, returns a three columns data.tables witht he first column corresponding to \code{x}'s row number and the second corresponing to \code{y}'s row number and the score of matched observation. Default is \code{FALSE}, which returns a join with the rows in y.}

\item{w}{Numeric vector of the same length as \code{fuzzy} specifying weight to use when summing across different column of \code{fuzzy}. Default to \code{rep(1, length(fuzzy))}.}

\item{na.score}{Numeric that specifies the distance between NA and another string. Default to 1/3}

\item{method}{see \link[stringdist]{stringdist}. Default to "jw"}

\item{p}{see \link[stringdist]{stringdist}. Default to 0.1}

\item{...}{Argument to pass to \link[stringdist]{stringdist}.}
}
\description{
\code{fuzzy_join} uses record linkage methods to match observations between two datasets where no perfect key fields exist.  For each row in x, fuzzy_join finds the row in y with the lowest distance (as defined in \code{method}). Multiple matches are returned in case of equality.
}
\examples{
x <- data.table(x = c("france", "franc"), y = c("arras", "dijon"))
y <- data.table(x = c("franc", "france"), y = c("arvars", "dijjon"))
fuzzy_join(x, y, fuzzy = c("x", "y"))
fuzzy_join(x, y, fuzzy = c("x", "y"), w = c(0.9, 0.1))
fuzzy_join(x,y, fuzzy = c("x", "y"), w = c(0, 0.9))
x <- data.table(x = c(1, 1), y = c("arras", "dijon"))
y <- data.table(x = c(1, 1), y = c("arvars", "dijjon"))
fuzzy_join(x, y, exact = "x", fuzzy = "y")
x <- data.table(x = c(1, 2), y = c("arras", "dijon"))
y <- data.table(x = c(1, 1), y = c("arvars", "dijjon"))
fuzzy_join(x,y, exact = "x", fuzzy = "y")
}

