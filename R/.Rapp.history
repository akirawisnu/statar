vars
length(TRUE)
is.atomic(TRUE)
is.atomic(c(TRUE.TRUE))
is.atomic(c(TRUE,TRUE))
dots
l=llist(1="ok")
l=list(1="ok")
l=list(ok = "ok")
l$NA
install.packages("/Users/Matthieu/Dropbox/Github/dplyr", repos = NULL, type="source")
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
suppressMessages(library("data.table"))
suppressMessages(library("dplyr"))
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
DT %>% mutate_each(funs(mean))
DT
DT %>% mutate_each(funs(mean), inplace = TRUE)
DT
install.packages("/Users/Matthieu/Dropbox/Github/dplyr", repos = NULL, type="source")
suppressMessages(library("tidyr"))#
suppressMessages(library("data.table"))#
suppressMessages(library(lazyeval))#
suppressMessages(library("dplyr"))
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
DT %>% mutate_each(funs(mean), inplace = TRUE)
DT
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
DT %>% mutate_each(funs(mean), inplace = FALSE)
DT
DT %>% select(v2, inplace = FALSE)
library(dpsuppressMessages(library("tidyr"))#
suppressMessages(library("data.table"))#
suppressMessages(library(lazyeval))#
suppressMessages(library("dplyr"))
suppressMessages(library("tidyr"))#
suppressMessages(library("data.table"))#
suppressMessages(library(lazyeval))#
suppressMessages(library("dplyr"))
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
DT %>% select(v1)
DT
DT %>% select(v1, inplace = TRUE)
DT
#' Gives summary statistics (Stata command summarize)#
#' #
#' @param DT A tbl_dt or tbl_grouped_dt.#
#' @param ... Variables to include/exclude in s You can use same specifications as in select. If missing, defaults to all non-grouping variables.#
#' @param inplace Change data.table in place or not#
#' @examples#
#' library(data.table)#
#' library(dplyr)#
#' N <- 100; K <- 10#
#' DT <- data.table(#
#'   id = 1:N,#
#'   v1 =  sample(5, N, TRUE),                          #
#'   v2 =  sample(1e6, N, TRUE),                       #
#'   v3 =  sample(round(runif(100, max = 100), 4), N, TRUE) #
#' )#
#' DT  %>% colorder(starts_with("v"), inplace = TRUE)#
#' @export#
colorder <- function(.data, ..., inplace = FALSE) {#
  colorder_(.data, vars = lazyeval::lazy_dots(...) , inplace = inplace)#
}#
#' @export#
colorder_ <- function(.data, vars, inplace = FALSE ) {#
  if (length(vars) == 0) {#
     vars <- lazyeval::lazy_dots(everything())#
   }#
  vars <- select_vars_(tbl_vars(.data), vars)#
  if (!inplace) .data <- copy(.data)#
  setcolorder(.data,vars,setdiff(names(.data),vars))#
  .data#
}
DT  %>% colorder(starts_with("v"), inplace = TRUE)
#' Gives summary statistics (Stata command summarize)#
#' #
#' @param DT A tbl_dt or tbl_grouped_dt.#
#' @param ... Variables to include/exclude in s You can use same specifications as in select. If missing, defaults to all non-grouping variables.#
#' @param inplace Change data.table in place or not#
#' @examples#
#' library(data.table)#
#' library(dplyr)#
#' N <- 100; K <- 10#
#' DT <- data.table(#
#'   id = 1:N,#
#'   v1 =  sample(5, N, TRUE),                          #
#'   v2 =  sample(1e6, N, TRUE),                       #
#'   v3 =  sample(round(runif(100, max = 100), 4), N, TRUE) #
#' )#
#' DT  %>% colorder(starts_with("v"), inplace = TRUE)#
#' @export#
colorder <- function(.data, ..., inplace = FALSE) {#
  colorder_(.data, vars = lazyeval::lazy_dots(...) , inplace = inplace)#
}#
#' @export#
colorder_ <- function(.data, vars, inplace = FALSE ) {#
  if (length(vars) == 0) {#
     vars <- lazyeval::lazy_dots(everything())#
   }#
  vars <- select_vars_(tbl_vars(.data), vars)#
  if (!inplace) .data <- copy(.data)#
  setcolorder(.data,c(vars,setdiff(names(.data),vars)))#
  .data#
}
DT  %>% colorder(starts_with("v"), inplace = TRUE)
DT
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
DT  %>% colorder(starts_with("v"), inplace = TRUE)
DT
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
library(dplyr)#
library(statar)#
#
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
      id = 1:N,#
      v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
      v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
      v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
    )#
#
### quantile category (=Stata xtile)#
DT %>% group_by(v1) %>% mutate(xtile(v2, nq = 3))#
DT %>% group_by(v1) %>% mutate(xtile(v2, cutpoints = c(1e5,5e5) ))
DT %>% group_by(id) %>% mutate(lag(value, order_by = time)) # Balanced dataset#
DT %>% group_by(id) %>% mutate(lag(value, along_with = time)) # Unbalanced dataset
DT %>% group_by(id) %>% mutate(lag(value, order_by = time)) # Balanced dataset
DT %>% group_by(id) %>% mutate(lag(v2, order_by = time)) # Balanced dataset
DT %>% group_by(id) %>% mutate(lag(v2, along_with = time)) # Unbalanced dataset
DT %>% group_by(id) %>% mutate(lag(v2, order_by = v1))
suppressMessages(library("tidyr"))#
suppressMessages(library("dplyr"))#
suppressMessages(library("data.table"))#
suppressMessages(library(lazyeval))#
suppressMessages(library("dplyr"))#
suppressMessages(library("reshape2"))#
suppressMessages(library("ggplot2"))#
suppressMessages(library("stringr"))#
suppressMessages(library("lubridate"))#
suppressMessages(library("pryr"))#
suppressMessages(library("lfe"))#
suppressMessages(library("foreign"))#
suppressMessages(library("stargazer"))#
suppressMessages(library("parallel"))#
suppressMessages(library("statar"))
library(data.table)#
#
N=1e6; K=100#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
### col_order (= Stata order)#
DT  %>% col_order(starts_with("v"))#
DT  %>% col_order(starts_with("v"), inplace = TRUE)#
#
### sum_up (= Stata summarize)#
DT  %>% sum_up#
DT  %>% sum_up(v3, d=T)#
DT  %>% filter(v1==1) %>% sum_up(starts_with("v"))#
#
### expand (= Stata tsfill)#
DT <- data.table(#
 id = c(1, 1, 1, 1, 1, 2, 2),#
 date = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
 value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)#
DT %>% group_by(id) %>% expand(date)#
DT %>% expand(date)
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
?spread
?gather
library(tidyr)
?gather
stocks <- data.frame(#
  time = as.Date('2009-01-01') + 0:9,#
  X = rnorm(10, 0, 1),#
  Y = rnorm(10, 0, 2),#
  Z = rnorm(10, 0, 4)#
)
stocks
socks %>% gather(type, price)
library(dplyr)
socks %>% gather(type, price)
stocks %>% gather(type, price)
DT_long <- DT_wide %>% gather(variable, value, -time)
DT_long <- stocks %>% gather(variable, value, -time)
DT_long
DT_long <- DT_wide %>% spread (variable, value, -time)
DT_wide <- DT_long %>% spread (variable, value, -time)
?spread
DT_wide <- DT_long %>% spread(variable, value, -time)
DT_wide <- DT_long %>% spread(variable, value)
DT_wide
DT_wide <- data.table (i=c(1,2), stub1=c(4.1,4.5), stub2(4.5,3.0)))
DT_wide <- data.table (i=c(1,2), stub1=c(4.1,4.5), stub2(4.5,3.0))
library(data.table)
DT_wide <- data.table (i=c(1,2), stub1=c(4.1,4.5), stub2(4.5,3.0))
DT_wide <- data.table (i=c(1,2), stub1=c(4.1,4.5), stub2=c(4.5,3.0))
DT_wide
DT_wide %>% gather(variable, value, -i)
DT_long <- DT_wide %>% gather(variable, value, -i)
DT_long %>% spread(variable, value)
assignInNamespace("cedta.override", c(data.table:::cedta.override,"IRkernel#
                                      "), "data.table")
showMethods(expand)
library(matrix)
showMethods(expand)
library(Matrix)
showMethods(expand)
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
library(statar)
library(data.table)
?hour
library(matrix)
library(Matrix)
?expand
showMethods(Matrix)
is.object(expand) & !isS4(expand)
is.object(expand
)
!isS4(expand)
isS4(expand)
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
library(lubridate)
weeks
months
months(1)
years(1)
years
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
suppressMessages(library("tidyr"))#
suppressMessages(library("dplyr"))#
suppressMessages(library("data.table"))#
suppressMessages(library(lazyeval))#
suppressMessages(library("dplyr"))#
suppressMessages(library("reshape2"))#
suppressMessages(library("ggplot2"))#
suppressMessages(library("stringr"))#
suppressMessages(library("lubridate"))#
suppressMessages(library("pryr"))#
suppressMessages(library("lfe"))#
library(biglm)#
suppressMessages(library("foreign"))#
suppressMessages(library("stargazer"))#
suppressMessages(library("parallel"))#
suppressMessages(library("statar"))
?expand
?expand_
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
lag
?lag
?lead
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
suppressMessages(library("tidyr"))#
suppressMessages(library("dplyr"))#
suppressMessages(library("data.table"))#
suppressMessages(library(lazyeval))#
suppressMessages(library("dplyr"))#
suppressMessages(library("reshape2"))#
suppressMessages(library("ggplot2"))#
suppressMessages(library("stringr"))#
suppressMessages(library("lubridate"))#
suppressMessages(library("pryr"))#
suppressMessages(library("lfe"))#
library(biglm)#
suppressMessages(library("foreign"))#
suppressMessages(library("stargazer"))#
suppressMessages(library("parallel"))#
suppressMessages(library("statar"))
?lag
?lead
?expand
?xtile
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
?sum_up
library(statar)
?sum_up
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
library(statar)
?sum_up
library(statar)
?sum_up
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
lead_along <- function(x, n = 1L, units = NULL, date, default = NA) {#
  if (!is.null(units)) {#
    if (is.null(date)) stop("units cannot be used without order_by")#
    unitsc <-match.arg(units,c("day","week","month","quarter","year"))#
    date_origin <- as.Date('0001-01-01')#
    if (unitsc=="day"){#
      return(lead_along(x = x, n = n, default = default, date = along))#
    }#
    if (unitsc == "week"){#
      date_elapsed <- as.period(date-date_origin)  %/% weeks(1)#
      return(lead_along(x = x, n = n, default = default, date = date_elapsed))#
    }  #
    else if (unitsc == "month"){#
      date_elapsed <- as.period(date-date_origin)  %/% months(1)#
      return(lead_along(x = x, n = n, default = default, date = date_elapsed))#
    } else if (unitsc == "quarter"){#
      date_elapsed <- as.period(date-date_origin)  %/% 3*months(1)#
      return(lead_along(x = x, n = n, default = default, date = date_elapsed))#
    } else if (unitsc == "year"){#
      date_elapsed <- as.period(date-date_origin)  %/% years(1)#
      return(lead_along(x = x, n = n, default = default, date = date_elapsed))#
    }#
  }#
#
  if (n == 0) return(x)#
  if (n < 0 || length(n) > 1) stop("n must be a single positive integer")#
  index <- match(date + n, date, incomparable = NA)#
  out <- x[index]#
  if (!is.na(default)) out[which(is.na(index))] <- default#
  attributes(out) <- attributes(x)#
  out#
}
lag_along <- function(x, n = 1L,  units = NULL, date = NULL, default = NA) {#
    if (!is.null(units)) {#
      if (is.null(date)) stop("units cannot be used without order_by")#
      unitsc <-match.arg(units,c("day","week","month","quarter","year"))#
      date_origin <- as.Date('0001-01-01')#
      if (unitsc=="day"){#
        return(lag_along(x = x, n = n, default = default, date = along))#
      }#
      if (unitsc == "week"){#
        date_elapsed <- as.period(date-date_origin)  %/% weeks(1)#
        return(lag_along(x = x, n = n, default = default, date = date_elapsed))#
      }  #
      else if (unitsc == "month"){#
        date_elapsed <- as.period(date-date_origin)  %/% months(1)#
        return(lag_along(x = x, n = n, default = default, date = date_elapsed))#
      } else if (unitsc == "quarter"){#
        date_elapsed <- as.period(date-date_origin)  %/% 3*months(1)#
        return(lag_along(x = x, n = n, default = default, date = date_elapsed))#
      } else if (unitsc == "year"){#
        date_elapsed <- as.period(date-date_origin)  %/% years(1)#
        return(lag_along(x = x, n = n, default = default, date = date_elapsed))#
      }#
    }#
#
    if (n == 0) return(x)#
    if (n < 0 || length(n) > 1) stop("n must be a single positive integer")#
    index <- match(date - n, date, incomparable = NA)#
    out <- x[index]#
    if (!is.na(default)) out[which(is.na(index))] <- default#
    attributes(out) <- attributes(x)#
    out#
  }
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
date := as.Date(c("01/03/1992", "03/04/1992", "05/05/1992", "21/08/1992"), "%m/%d/%y")
date = as.Date(c("01/03/1992", "03/04/1992", "05/05/1992", "21/08/1992"), "%m/%d/%y")
date+1
date
date = as.Date(c("01/03/1992", "03/04/1992", "05/05/1992", "21/08/1992"), "%m/%d/%y")
date
?as.Date
date = as.Date(c("01/03/1992", "03/04/1992", "05/05/1992", "21/08/1992"), "%m/%d/%Y")
date
devtools::install_github("matthieugomez/tidyr")#
devtools::install_github("matthieugomez/lazyeval")#
devtools::install_github("matthieugomez/dplyr")#
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
library(dplyr)#
library(data.table)#
library(statar)#
#
# partition creates quantile categories (corresponds to Stata xtile)#
v2 <-   sample(1e6, 1e6, TRUE)                   #
v2_categorized <- partition(v2, nq = 3) # 3 groups based on terciles#
v2_categorized <- partition(v2, cutpoints = c(1e5, 5e5)) # 3 groups based on two cutpoints#
# lag/lead create lag/lead variables (corresponds to Stata L. F.)#
## unbalanced panel#
DT <- data.frame(#
 date  = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
 value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)#
DT %>% mutate(lag(value, 1, order_by = date)) # wrong#
DT %>% mutate(lag(value, 1, along_with = date)) # right#
#
## periods can be used instead of integers#
library(lubridate)#
df <- data.frame(     #
   id = c("id1", "id1", "id1", "id1"),#
   date = mdy(c("03/01/1992", "04/03/1992", "07/15/1992", "08/21/1992")),#
   value = c(4.1, 4.5, 3.3, 5.3)#
)#
df <- df %>% mutate(date = floor_date(date, "month"))#
df %>% group_by(id) %>% mutate(lag(value, months(1), along_with = date))
?data.table::lag
?lag
library(data.table)
library(dplyr)
lead_lag <- function(x, k=0){ ifelse( k<0, lag(x, -k), lead(x, k) ) }#
#
DT <- data.table(#
   id = c(1, 1, 1, 1, 1, 2, 2),#
   date = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
   value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)#
#
R> DT#
   id date value#
1:  1 1992   4.1#
2:  1 1989   4.5#
3:  1 1991   3.3#
4:  1 1990   5.3#
5:  1 1994   3.0#
6:  2 1992   3.2#
7:  2 1991   5.2#
R> DT %>% group_by(id) %>% mutate( lead_lag(value,1) )#
Source: local data table [7 x 4]#
Groups: id#
#
  id date value lead_lag(value, 1)#
1  1 1992   4.1                4.5#
2  1 1989   4.5                4.5#
3  1 1991   3.3                4.5#
4  1 1990   5.3                4.5#
5  1 1994   3.0                4.5#
6  2 1992   3.2                5.2#
7  2 1991   5.2                5.2#
R>
lead_lag <- function(x, k=0){ ifelse( k<0, lag(x, -k), lead(x, k) ) }#
#
DT <- data.table(#
   id = c(1, 1, 1, 1, 1, 2, 2),#
   date = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
   value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)#
#
DT#
   id date value#
1:  1 1992   4.1#
2:  1 1989   4.5#
3:  1 1991   3.3#
4:  1 1990   5.3#
5:  1 1994   3.0#
6:  2 1992   3.2#
7:  2 1991   5.2#
DT %>% group_by(id) %>% mutate( lead_lag(value,1) )#
Source: local data table [7 x 4]#
Groups: id#
#
  id date value lead_lag(value, 1)#
1  1 1992   4.1                4.5#
2  1 1989   4.5                4.5#
3  1 1991   3.3                4.5#
4  1 1990   5.3                4.5#
5  1 1994   3.0                4.5#
6  2 1992   3.2                5.2#
7  2 1991   5.2                5.2#
R>
lead_lag <- function(x, k=0){ ifelse( k<0, lag(x, -k), lead(x, k) ) }#
#
DT <- data.table(#
   id = c(1, 1, 1, 1, 1, 2, 2),#
   date = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
   value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)
R> DT %>% group_by(id) %>% mutate( lead_lag(value,1) )
DT %>% group_by(id) %>% mutate( lead_lag(value,1) )
DT %>% group_by(id) %>% mutate( lead_lag(value,1,order_by(date)) )
debug(lead_lag)
DT %>% group_by(id) %>% mutate( lead_lag(value,1,order_by(date)) )
DT %>% group_by(id) %>% mutate( lead_lag(value,1)) )
DT %>% group_by(id) %>% mutate( lead_lag(value,1))
s
n
s
debug(lead_lag)
lead_lag(DT$value,1)
s
f
lead_lag(value,1)
s
f
undebug(lead_lag)
lead_lag <- function(x, k=0){ ifelse( k<0, lag(x, -k), lead(x, k) ) }
lead_lag(c(1,2),k=1)
lag(c(1,2),n=1)
sign(k){if (k>0){function(x){lag(x,k)}else{function(x){lead(x,k)}
sign(k){if (k>0){function(x){lag(x,k)}else{function(x){lead(x,k)}}
lead_lag(k) <- function{if (k>0){function(x){lag(x,k)}else{function(x){lead(x,k)}}
lead_lag(k) <- function(k){if (k>0){function(x){lag(x,k)}else{function(x){lead(x,k)}}
lead_lag(k) <- function(k){if (k>0){function(x){lag(x,k)}}else{function(x){lead(x,k)}}
}
lead_lag <- function(k){if (k>0){function(x){lag(x,k)}}else{function(x){lead(x,k)}}}
lea_lag(3)(c(1,2)
_
lea_lag(3)(c(1,2))
lead_lag(3)(c(1,2))
lead_lag(1)(c(1,2))
?ifelse
N=1e6; K=100#
DT <- data.table(#
  id = 1:N,#
  v1 = sample(5, N, TRUE),#
  v2 = sample(1e6, N, TRUE),#
  v3 = sample(round(runif(100,max=100), 4), N, TRUE)#
  )#
#
# colorder (= Stata order)#
DT  %>% colorder(starts_with("v"))#
DT  %>% colorder(starts_with("v"), inplace = TRUE)#
#
# sum_up (= Stata summarize)#
DT  %>% sum_up#
DT  %>% sum_up(v3, d=T)#
DT  %>% filter(v1==1) %>% sum_up(starts_with("v"))
library(statar)
N=1e6; K=100#
DT <- data.table(#
  id = 1:N,#
  v1 = sample(5, N, TRUE),#
  v2 = sample(1e6, N, TRUE),#
  v3 = sample(round(runif(100,max=100), 4), N, TRUE)#
  )#
#
# colorder (= Stata order)#
DT  %>% colorder(starts_with("v"))#
DT  %>% colorder(starts_with("v"), inplace = TRUE)#
#
# sum_up (= Stata summarize)#
DT  %>% sum_up#
DT  %>% sum_up(v3, d=T)#
DT  %>% filter(v1==1) %>% sum_up(starts_with("v"))
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
suppressMessages(library("data.table"))#
suppressMessages(library("biglm"))#
N=1e7; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
DT[, condition := id>100]#
system.time(DT[ id >100, coefficients(biglm(v3 ~ v2 + v1, .SD)), .SDcols = c("v1","v2","v3")])#
system.time(DT[, coefficients(biglm(v3 ~ v2 + v1, .SD)), by = "condition", .SDcols = c("v1","v2","v3")])#
system.time(coefficients(biglm(v3 ~ v2 + v1, DT[id>100, c("v1","v2","v3"), with = FALSE])
)
suppressMessages(library("data.table"))#
suppressMessages(library("biglm"))#
N=1e7; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
DT[, condition := id>100]
system.time(DT[, coefficients(biglm(v3 ~ v2 + v1, .SD)), by = condition, .SDcols = c("v1", "v2", "v3")])
library(Matrix)
?expand
isS4(expand)
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
?expand
DT <- data.table(#
    id = c(1, 1, 1, 1, 1, 2, 2),#
    date = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
    value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)#
DT %>% expand(date)
library(dpryr)
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
devtools::install_github("matthieugomez/statar")
?lag
lag
devtools::install_github("smbache/magrittr")
library(magrittr)
rnorm(100) %T>%#
  plot(type = "l", col = "firebrick") %>%#
  abs %>%#
  sum
tmp :=#
  subset(Species == "setosa") %>%#
  set_names(LETTERS[1:5])
install.packages("colorout")
download.file("http://www.lepem.ufc.br/jaa/colorout_1.0-3.tar.gz", destfile = "colorout_1.0-3.tar.gz")#
install.packages("colorout_1.0-3.tar.gz", type = "source", repos = NULL)
savehistory
savehistory(ok)
savehistory("ok")
savehistory("~/.R.app.history")
savehistory()
fefe
savehistory()
l <- c("col1", "throwaway", "col3")#
l[c(FALSE, NA, TRUE)]
l[str_detect(l,"col")]
library(stringr)
l[str_detect(l,"col")]
str_detect(l,"col")
l <- c("col1", NA , "col3")
l[which(l == "col1")]
l[l == "col1"]
l <- c("col1", "throwaway", "col3")#
	l[l == "col1" | l == "col3"]
l[str_detect(l,"col")]
l[c(TRUE, FALSE, TRUE)]
l <- c("col1", "throwaway", "col3")#
	l[c(TRUE, FALSE, TRUE)]		#
	#> [1] "col1"  "col3"#
	l[l == "col1" | l == "col3"]			#
	l[str_detect(l,"col")]#
	#> [1] "col1"  "col3"
l <- c("col1", NA, "col3")#
	l[c(TRUE, FALSE, TRUE)]		#
	#> [1] "col1"  "col3"#
	l[l == "col1" | l == "col3"]			#
	l[str_detect(l,"col")]#
	#> [1] "col1"  "col3"
l <- c("col1", NA, "col3")#
	l[c(TRUE, NA, TRUE)]		#
	#> [1] "col1" NA "col3"
l[l == "col1" | l == "col3"]
l <- c("col1", NA, "col3")#
	l[which(c(TRUE, NA, TRUE))]		#
	#> [1] "col1" NA "col3"#
	l[which(l == "col1" | l == "col3")]		#
	#> [1] "col1" NA "col3"#
	l[which(str_detect(l,"col"))]#
	#> [1] "col1" NA "col3"
x[c(T, F, NA)] <- 1
x <- 1:5
1:10 %% 2 == 0
1:10 %% 2
amatch("leia",c("uhura","leela"),maxDist=5)
library(stringdist)
install.packages("stringdist")
amatch("leia",c("uhura","leela"),maxDist=5)
library(stringdist)
amatch("leia",c("uhura","leela"),maxDist=5)
amatch("leia",c("uhura","leela"))
amatch("leia",c("uhura","leela"),maxDist=1000)
amatch("leia",c("uhura","leela"),maxDist=Inf)
amatch("leia",c("uhura","leela"),maxDist=1,nomatch=0)
amatch("leia",c("uhura","leela"),maxDist=1,nomatch=0)
amatch("leia",c("uhura","leela"),maxDist=1)
stringdist("MARTHA","MARHTA")
stringdist("MARTHA","MARHTA", method=jw,p=0.1)
stringdist("MARTHA","MARHTA", method="jw",p=0.1)
install.packages("RecordLinkage"0
install.packages("RecordLinkage")
match(0.3,c(0.3,0.4))
library(zoo)
na.locf
?na.locf
data.frame(rep("a",4), 1:4,1:4, c(1,NA,NA,NA))
na.locf(1:4, c(1,NA,NA,2))
na.locf(1:4, c(1,NA,NA,2))
na.locf(cbind(1:4, c(1,NA,NA,2)))
setwd("/Users/Matthieu/Dropbox/Symlink")#
  N <- 2e6#
  DT <- data.table(#
           date = sample(10, N, TRUE),#
             id = sample(1e5, N, TRUE),   #
          value = sample(c(NA,1:5), N, TRUE)                   #
        )
library(data.table)
setwd("/Users/Matthieu/Dropbox/Symlink")#
  N <- 2e6#
  DT <- data.table(#
           date = sample(10, N, TRUE),#
             id = sample(1e5, N, TRUE),   #
          value = sample(c(NA,1:5), N, TRUE)                   #
        )
DT
?.na.locf
?na.locf
S<- c(2,NA,5,NA,NA,1,NA)
c(S[L][1], S[L])
L<- S
c(S[L][1], S[L])
S[L][1]
S[L]
L <- !is.na(S)#
  c(S[L][1], S[L])[cumsum(L)+1]
S
zoo::na.locf.default
fill_in <- function(x) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast, maxgap = Inf))#
  }#
  na.locf(x, fromLast, maxgap)#
}
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
#
DT[, fill_in(value, order_by = date, fromLast, maxgap = Inf), by = id]
?fromLast
?na.locf
setwd("/Users/Matthieu/Dropbox/Symlink")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE, maxgap = Inf) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast, maxgap = maxgap))#
  }#
  na.locf(x, fromLast, maxgap)#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
#
DT[, fill_in(value, order_by = date), by = id]
library(dplyr)
with_order
setwd("/Users/Matthieu/Dropbox/Symlink")#
#
DT[, fill_in(value, order_by = date), by = id]#
#
fill_in <- function(x, order_by = NULL, fromLast = FALSE, maxgap = Inf) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast, maxgap = maxgap))#
  }#
  na.locf(x, fromLast, maxgap)#
}
?na.locf
zoo::na.locf.default
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
#
DT[, fill_in(value, order_by = date), by = id]#
#
fill_in <- function(x, order_by = NULL, fromLast = FALSE, maxgap = Inf) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast, maxgap = maxgap, na.rm = FALSE))#
  }#
  na.locf(x,  fromLast = fromLast, maxgap = maxgap, na.rm = FALSE)#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, fill_in(value, order_by = date), by = id]
?na.locf
setwd("/Users/Matthieu/Dropbox/Symlink")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE, maxgap = Inf) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast, maxgap = maxgap))#
  }#
  na.locf.default(x, fromLast = fromLast, maxgap = maxgap, na.rm = FALSE)#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, fill_in(value, order_by = date), by = id]
?na.locf
?na.locf
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast, maxgap = maxgap))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, fill_in(value, order_by = date), by = id]
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, fill_in(value, order_by = date), by = id]
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  setDT(x)#
  x[!is.na(x)][x,roll = TRUE]#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, fill_in(value, order_by = date), by = id]
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  setDT(list(x))#
  x[!is.na(x)][x,roll = TRUE]#
}
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, fill_in(value, order_by = date), by = id]
x= V1
x= DT$V1
setDT(list(x))
x[!is.na(x)]
x
DT$V1
DT
x <- DT$value
setDT(list(x))
x
x[!is.na(x)]
x <- data.table(list(DT$value))
x
x <- data.table(list(V1=x))
x
x <- data.table(V1=x)
x
x <- data.table(V1=DT$value)
x
x[!is.na()][x,roll = TRUE]
x[!is.na(V1)][x,roll = TRUE]
setkey(x[!is.na(V1)])[x,roll = TRUE]
setkey(x[!is.na(V1)])
x[!is.na(V1)]
setkey(x[!is.na(V1)],V1)[x,roll = TRUE]
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )
library(xts)
xts::na.locf
?data.table
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
}
DT
DT[!is.na(value)][DT[, list(id, year)], roll = TRUE]
DT[!is.na(value)][DT[, list(id, date)], roll = TRUE]
setkeyv(DT, c("id", "date"))#
DT[!is.na(value)][DT[, list(id, date)], roll = TRUE]
DT[DT[!is.na(value), list(id, date)]]
DT[!is.na(value), list(id, date)]
DT
DT[DT[!is.na(value), list(id, date)], a:=1]
DT[DT[!is.na(value), list(id, date)], a:=1,allow.cartesian = TRUE]
DT[DT[!is.na(value), list(id, date, value)], valu_filled:= i.value,allow.cartesian = TRUE]
DT
DT <- unique(DT)
DT[, valu_filled:=  NULL]
DT[DT[!is.na(value), list(id, date, value)], valu_filled:= i.value,allow.cartesian = TRUE]
DT
keys(DT)
key(DT)
?roll
?data.table
DT[DT[!is.na(value), list(id, date, value)], valu_filled:= i.value, roll= TRUE]
DT
setkeyv(DT, c("id", "year"))#
DT[!is.na(value)][DT[, list(id, year)], roll = TRUE]
setkeyv(DT, c("id", "date"))#
DT[!is.na(value)][DT[, list(id, date)], roll = TRUE]
DT
DT
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )
setkeyv(DT, c("id", "date"))#
DT[!is.na(value)][DT[, list(id, date)], roll = TRUE]
setkeyv(DT, c("id", "date"))#
DT[!is.na(value)][DT[, list(id, date)], roll = TRUE, allow.cartesian= TRUE]
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
}
DT
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )
DT
DT[, b:=fill_in(value, order_by = date)]
DT
DT[, b:=fill_in(value, order_by = date), by=id]
DT
x <- c(1,NA,NA,NA,3)
?na.locf
na.locf.default(x, na.rm=FALSE, maxgap=2)
na.locf.default(x, na.rm=FALSE)
na.locf.default(x, na.rm=FALSE, maxgap=2)
DT
DT[DT[!is.na(value),list(id, date,value)], roll=TRUE]
DT[DT[!is.na(value),list(id, date,value)], a:=1, roll=TRUE]
setkey(DT,id,year)
setkey(DT,id,date)
DT[DT[!is.na(value),list(id, date,value)], a:=1, roll=TRUE]
DT[DT[!is.na(value),list(id, date,value)], a:=1, roll=TRUE, allow.cartesian = TRUE]
DT
DT[DT[!is.na(value),list(id, date,value)], a:=i.value, roll=TRUE, allow.cartesian = TRUE]
DT
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)
DT[DT[!is.na(value),list(id, date,value)], a:=i.value, roll=TRUE, allow.cartesian = TRUE]
DT
?data.table
DT[!is.na(value),list(id, date,value)]
DT <- data.table(#
         date = sample(10, N, TRUE),#
            id = sample(1e5, N, TRUE),   #
         value = sample(c(NA,1:5), N, TRUE)                   #
       )#
setkey(DT,id,date)#
DT<- unique(DT)
DT[DT[!is.na(value),list(id, date,value)], roll=TRUE, allow.cartesian = TRUE]
DT
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
            id = sample(1e5, N, TRUE),   #
         value = sample(c(NA,1:5), N, TRUE)                   #
       )#
setkey(DT,id,date)#
DT<- unique(DT)
DT
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
            id = sample(1e5, N, TRUE),   #
         value = sample(c(NA,1:5), N, TRUE)                   #
       )#
setkey(DT,id,date)#
DT<- unique(DT)#
#>        date     id value#
#>     1:    1      1     1#
#>     2:    3      1    NA#
#>     3:    4      1     2#
#>     4:    5      1    NA#
#>     5:    7      1     1
DT
DT[DT[!is.na(value),list(id, date,value)], a:=i.value, roll=TRUE, allow.cartesian = TRUE]
DT
DT[!is.na(value),list(id, date,value)]
DT[DT[!is.na(value),list(id, date,val=value)], a:=i.val, roll=TRUE, allow.cartesian = TRUE]
DT
DT[!is.na(value),list(id, date,value)][DT]
DT[!is.na(value),list(id, date,value)][DT, roll = TRUE]
DT[!is.na(value),list(id, date,value)][DT, a=i.value, roll = TRUE]
DT[,i.value:=NULL]
DT
DT[,a:=NULL]
DT[!is.na(value),list(id, date,value)][DT, a=i.value, roll = TRUE]
DT
DT[!is.na(value),list(id, date,value)][DT, roll = TRUE]
DT[!is.na(value),list(id, date,value)][DT, roll = TRUE]
DT[!is.na(value),list(id, date)][DT, roll = TRUE]
DT[DT[!is.na(value),list(id, date), roll = TRUE]
]
DT[DT[!is.na(value),list(id, date)], roll = TRUE]
DT
DT[DT[!is.na(value),list(id, date,value)], roll = TRUE]
DT[!is.na(value)][DT[, list(id, year)], roll = TRUE]
DT[!is.na(value)][DT[, list(id, year)], value,roll = TRUE]
DT[!is.na(value)][DT[, list(id, date)], value,roll = TRUE]
DT[!is.na(value)][DT[, list(id, date)], roll = TRUE]
head(DT[!is.na(value)][DT[, list(id, date)], value, roll = TRUE])
DT
DT[,value_filled_in :=DT[!is.na(value)][DT[, list(id, date)], value, roll = TRUE]]
DT
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
}#
  L <- !is.na(x)#
  c(x[L][1], x[L])[cumsum(L)+1]#
}
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
#
fill_in <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
}#
fill_in1 <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
  L <- !is.na(x)#
  c(x[L][1], x[L])[cumsum(L)+1]#
}
DT[, a:=fill_in(x), by=id]
DT
warning()
DT[, a:=fill_in(x), by=id]
warning()
fill_in1 <- function(x, order_by = NULL, fromLast = FALSE) {#
  if (!is.null(order_by)) {#
       return(with_order(order_by, fill_in, x, fromLast = fromLast))#
  }#
  na.locf.default(x, fromLast = fromLast, na.rm = FALSE)#
  L <- !is.na(x)#
  c(x[L][1], x[L])[cumsum(L)+1]#
}
DT[, a:=fill_in1(x), by=id]
DT
DT[, a:=fill_in1(value), by=id]
DT[, a:=NULL, by=id]
DT[, a:=fill_in1(value), by=id]
DT
DT[, a:=NULL, by=id]
DT
DT[, a:=NULL]
DT[, a:=fill_in1(value), by=id]
DT
system.time(DT[, b:=fill_in1(value), by=id])
system.time(DT[, c:=fill_in(value), by=id])
DT
system.time(DT[, c:=1, by=id])
system.time(DT[, d:=1, by=id])
DT
DT[,value_filled_in :=DT[!is.na(value)][DT[, list(id, date)], value, roll = TRUE]]
DT
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)#
DT[,value_filled_in :=DT[!is.na(value)][DT[, list(id, date)], value, roll = TRUE]]
DT
?set
DT[,value_filled_in :=DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], value, roll = TRUE]]
DT
DT
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)
DT
N <- 2e6#
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)
DT
DT[,value_filled_in :=DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], value, roll = TRUE]]
DT
N <- 2e6#
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)#
        value2 = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)#
#
# command#
DT[, value_filled_in := DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], value, roll = TRUE]]
N <- 2e6#
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE),#
        value2 = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)#
#
# command#
DT[, value_filled_in := DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], value, roll = TRUE]]
DT
?data,tabke
?data,table
?data.table
DT[, value_filled_in := DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], valueN <- 2e6#
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE),#
        value2 = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)#
#
# command#
DT[, value_filled_in := DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], value, roll = TRUE]]#
, roll = TRUE]]
N <- 2e6#
set.seed(1)#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE),#
        value2 = sample(c(NA,1:5), N, TRUE)                   #
      )#
setkey(DT,id,date)#
DT<- unique(DT)
DT[, value_filled_in := DT[!is.na(value), list(id, date, value)][DT[, list(id, date)], value, roll = TRUE]]
DT
?data.table
?data.table
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(.data, ..., order_by = , roll, rollends) {#
  fill_in_(.data, .dots = lazyeval::lazy_dots(...), type = type)#
}#
#
#' @export#
fill_in_ <- function(.data, ...,.dots) {#
  UseMethod("fill_in_")#
}#
#
#' @export#
fill_in_.grouped_dt <- function(.data, ..., order_by = , roll, rollends)){#
  dots <- lazyeval::all_dots(.dots, ...)#
  var_name <- names(select_vars_(names(.data), dots))#
  byvars <- as.character(groups(.data))#
  DT1 <- DT[, c(byvars, date, var_name), with = FALSE]#
  for (t in var_name) {#
    setkeyv(DT1,c(byvars, date))#
    DT[, t := DT[!is.na(t),c(byvars, date, t), with = FALSE][DT[, c(byvars,date), with=FALSE], t, roll = roll, rollends = rollends]]#
    }#
}#
#
#' @export#
fill_in_.data.table <- function(.data, ..., order_by = , roll, rollends)){#
  dots <- lazyeval::all_dots(.dots, ...)#
  var_name <- names(select_vars_(names(.data), dots))#
  DT1 <- DT[, c( date, var_name), with = FALSE]#
  for (t in var_name) {#
    setkeyv(DT1,c( date))#
    DT[, t := DT[!is.na(t),c( date, t), with = FALSE][DT[, c(date), with=FALSE], t, roll = roll, rollends = rollends]]#
    }#
}
?data.table
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(.data, ..., order_by = , roll = , rollends= if (roll=="nearest") c(TRUE,TRUE)#
             else if (roll>=0) c(FALSE,TRUE)#
             else c(TRUE,FALSE)) {#
  fill_in_(.data, .dots = lazyeval::lazy_dots(...),  order_by = order_by, roll=roll, rollends=rollends)#
}
setwd("/Users/Matthieu/Dropbox/Github/statar-package/R")#
fill_in <- function(.data, ..., order_by = , roll = , rollends= if (roll=="nearest") c(TRUE,TRUE)#
             else if (roll>=0) c(FALSE,TRUE)#
             else c(TRUE,FALSE)) {#
  fill_in_(.data, .dots = lazyeval::lazy_dots(...),  order_by = order_by, roll=roll, rollends=rollends)#
}
