library(data.table)
x <- data.table(a = rep(1:2, each = 3), b=1:6) ; y <- data.table(a = 0:1, bb = 10:11)
join(x, y, type = "inner", check = 1~m)
biglm
N=2e6; K=100#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
biglm(v1~id)
biglm(v1~id, DT)
library(biglm)
biglm(v1~id, DT)
?biglm
?speedlm
library(speedlm)
library(speedglm)
?speedlm
system.time(speedlm(v1~id,DT))
system.time(speedlm.fit(v1~id,DT))
system.time(speedlm(v1~id,DT))
system.time(biglm(v1~id,DT))
system.time(speedlm(v1~id,DT))
system.time(biglm(v1~id,DT))
object.size(biglm(v1~id,DT))
object.size(speedlm(v1~id,DT))
ls(getNamespace("lfe"), all.names=TRUE)
C_conncomp
id <- function(){print("1")}
g<- function(x){lazy(x)}
g(id)
library(lazyeval)
g(id)
install.packages("lfe")
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)
fllibrary(lfe)#
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)
library(lfe)#
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)
library(lfe)
library(lfe)#
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)
felm
felm::project
lfe::project
lfe:::project
x
?felm
remove.packages("lfe")         # revert back to CRAN
install.packages("data.table")
install.packages("lfe")
library(lfe)
library(lfe)#
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)#
#> "Error in eval(expr, envir, enclos) : object 'v2(fit)' not found‚Äù
lfe
sessionInfo()
lfe
felm
project
lfe::project
lfe:::project
doprojols
felm::doprojols
felm:::doprojols
felm::doprojols
lfe:::doprojols
library(statar)
# lag/lead create lag/lead variables (corresponds to Stata L. F.)#
year <- c(1992, 1989, 1991, 1990, 1994, 1992, 1991)#
value <- c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
lag(value, 1, order_by = year) # returns value in previous year, like  dplyr::lag#
lag(value, 1, along_with = year) #  returns value in year - 1#
#
library(lubridate)#
date <- mdy(c("03/01/1992", "04/03/1992", "07/15/1992", "08/21/1992"))#
value <- c(4.1, 4.5, 3.3, 5.3)#
datem <- floor_date(date, "month")#
value_l <- lag(value, months(1), along_with = datem) #
#
# tag (corresponds to Stata tag)#
tag(c(1, 2))#
tag(c(1, 2), fromLast = TRUE)#
#
# sample_mode (corresponds to Stata mode)#
sample_mode(c(1, 2, 2))#
sample_mode(c(1, 2))#
sample_mode(c(NA, NA, 1))#
sample_mode(c(NA, NA, 1), na.rm = TRUE)#
#
# partition creates integer variable for quantile categories (corresponds to Stata xtile)#
v <- sample(c(NA, 1:10), 10, TRUE)                   #
partition(v, nq = 3) # 3 groups based on terciles#
partition(v, cutpoints = c(1, 3)) # 3 groups based on two cutpoints#
#
# winsorize (default based on 5 x interquartile range)#
winsorize(c(1, 2, 99))#
winsorize(c(1, 2, 99), replace = NA)#
winsorize(c(1, 2, 3, 99), cutpoints = quantile(c(1, 2, 3, 99), c(0.01, 0.99), type = 1))
library(data.table)#
library(dplyr)#
#
# sum_up (= Stata summarize)#
N=1e6; K=100#
DT <- data.table(#
  id = 1:N,#
  v1 = sample(5, N, TRUE),#
  v2 = sample(1e6, N, TRUE),#
  )#
DT %>% sum_up#
DT %>% sum_up(v2, d=T)#
DT %>% filter(v1==1) %>% sum_up(starts_with("v"))#
#
# fill_gap (= Stata tsfill)#
DT <- data.table(#
    id    = c(1, 1, 1, 1, 1, 2, 2),#
    date  = c(1992, 1989, 1991, 1990, 1994, 1992, 1991),#
    value = c(4.1, 4.5, 3.3, 5.3, 3.0, 3.2, 5.2)#
)#
DT %>% group_by(id) %>% fill_gap(value, along_with = date)#
DT %>% group_by(id) %>% fill_gap(value, along_with = date, full = TRUE)#
#
# fill na (in a new dataset)#
DT <- data.table(#
 id    = c(1, 1, 1, 1, 1, 2, 2),#
 date  = c(1992, 1989, 1991, 1990, 1994, 1992, 1991), #
 value = c(NA, NA, 3, 5.3, 3.0, 3.2, 5.2)#
)#
DT %>% group_by(id) %>% fill_na(value, along_with = date) #
DT %>% group_by(id) %>% fill_na(value, along_with = date, roll = "nearest")#
#
# fill na (in the original dataset)#
DT <- data.table(#
 id    = c(1, 1, 1, 1, 1, 2, 2),#
 date  = c(1992, 1989, 1991, 1990, 1994, 1992, 1991), #
 value = c(NA, NA, 3, 5.3, 3.0, 3.2, 5.2)#
)#
setkeyv(DT,c("id", "date"))#
setna(DT, "value")#
setna(DT, "value", roll = "nearest")
x <- data.table(a = rep(1:2, each = 3), b = 1:6)#
y <- data.table(a = 0:1, bb = 10:11)#
# outer corresponds to Stata joinby keep(master matched using)#
join(x, y, type = "outer")#
# left corresponds to Stata joinby keep(master matched)#
join(x, y, type = "left")#
# right corresponds to Stata joinby keep(mached using)#
join(x, y, type = "right")#
# inner corresponds to Stata joinby keep(matched)#
join(x, y, type = "inner")#
#
join(x, y, type = "semi")#
join(x, y, type = "anti")#
join(x, y, type = "outer", check = 1~m)#
join(x, y, type = "outer", gen = "_merge")
sessionInfo()
library(lfe)
sessionInfo()
install.packages(lfe)
install.packages(felm)
install.packages("felm")
install.packages("lfe")
install.packages("~/Dropbox/Symlink/Downloads/lfe_1.7-1401.tar.gz", repos = NULL, type="source")
install.packages("~/Dropbox/Symlink/Downloads/lfe_1.7-1401.tar.gz")
install.packages("lfe")
library(lfe)#
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)
library(lfe)
system.info()
systeminfo()
session.info()
sessionInfo()
library(lfe)
install.packages("~/Dropbox/Symlink/Downloads/lfe_1.7-1401.tar.gz")
install.packages("~/Dropbox/Symlink/Downloads/lfe_1.7-1401.tar.gz", repo = NULL)
install.packages("~/Dropbox/Symlink/Downloads/lfe_1.7-1401.tar.gz", repo = NULL, type = "source")
library(lfe)
sessionInfo
sessionInfo()
library(lfe)#
f <- function(formula, df){felm(formula,df)}#
N <- 1e3#
df <- data.frame(#
          v1   = sample(10, N, TRUE),#
          v2   = sample(1e5, N, TRUE),    #
          v3   = sample(c(1:5), N, TRUE)                    #
       )#
f(v1~v2, df)#
#>(Intercept)          v2  #
#>  5.332e+00   2.718e-06  #
f(v1~1|0|(v2~v3),df)
?felm
felm
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
?graph
library(statar)
?graph
devtools::document("/Users/Matthieu/Dropbox/Github/statar-package")
?bin
library(tidyr)
library(data.table)
spread_.data.table <- function(data, key_col, value_col, fill = NA, convert = FALSE, drop = TRUE) {#
  id <- setdiff(names(data), c(key_col, value_col))#
  length_lhs <- length(id)#
  if (!length_lhs) {#
    id <- tempname("temp", data)#
    data[, (id) := 1] #
    on.exit(data[, (id) := NULL])#
  }#
  if (anyDuplicated(data, by = c(id, key_col))){#
        overall <- dplyr::id(data[,c(id, key_col), with = FALSE])#
        groups <- split(seq_along(overall), overall)#
        groups <- groups[vapply(groups, length, integer(1)) > 1]#
        str <- vapply(groups, function(x) paste0("(", paste0(x, collapse = ", "), ")"),#
             character(1))#
        stop("Duplicate identifiers for rows ", paste(str, collapse = ", "),#
             call. = FALSE)#
  }#
  formula <- reformulate(termlabels = key_col , response = id)#
  data2 <- dcast.data.table(data, formula, value.var = value_col, fill = fill, drop = drop)#
  if (!length_lhs) {#
    data2[, (id) := NULL]#
  }#
  if (convert) {#
     data2[, names(data2) := lapply(.SD,type.convert, as.is = TRUE), .SDcols = names(data2)]#
   }#
  data2#
}
?spread
stocks <- data.table(#
  time = as.Date('2009-01-01') + 0:9,#
  X = rnorm(10, 0, 1),#
  Y = rnorm(10, 0, 2),#
  Z = rnorm(10, 0, 4)#
)#
stocksm <- stocks %>% gather(stock, price, -time)#
stocksm %>% spread(stock, price)#
stocksm %>% spread(time, price)#
#
# Spread and gather are complements#
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))#
df %>% spread(x, y) %>% gather(x, y, a:b, na.rm = TRUE)
library(dplyr)
stocks <- data.table(#
  time = as.Date('2009-01-01') + 0:9,#
  X = rnorm(10, 0, 1),#
  Y = rnorm(10, 0, 2),#
  Z = rnorm(10, 0, 4)#
)#
stocksm <- stocks %>% gather(stock, price, -time)#
stocksm %>% spread(stock, price)#
stocksm %>% spread(time, price)#
#
# Spread and gather are complements#
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))#
df %>% spread(x, y) %>% gather(x, y, a:b, na.rm = TRUE)
df
stocks <- data.table(#
  time = as.Date('2009-01-01') + 0:9,#
  X = rnorm(10, 0, 1),#
  Y = rnorm(10, 0, 2),#
  Z = rnorm(10, 0, 4)#
)#
stocksm <- stocks %>% gather(stock, price, -time)#
stocksm %>% spread(stock, price)#
stocksm %>% spread(time, price)#
#
# Spread and gather are complements#
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))#
df %>% spread(x, y)
df
df %>% select(x,y) %>% spread(x, y)
df %>% select(x,y) %>% dcast(~x, y)
library(reshape2)
df %>% select(x,y) %>% dcast(~x, y)
df %>% select(x,y) %>% dcast(1~x, y)
df %>% select(x,y) %>% dcast(1~x)
df %>% select(x,y) %>% spread(x,y)
df
df %>% select(x,y) %>% dcast(1~x)
setDT(df) %>% select(x,y) %>% dcast(1~x)
setDT(df) %>% select(x,y) %>% dcast(\~x)
setDT(df) %>% select(x,y) %>% dcast(~x)
setDT(df) %>% select(x,y) %>% dcast(NULL~x)
setDT(df) %>% select(x,y) %>% dcast(character(0)~x)
devtools::release("/Users/Matthieu/Dropbox/Github/appliedr")
devtools::load("/Users/Matthieu/Dropbox/Github/appliedr")
?devtools
devtools::load_all("/Users/Matthieu/Dropbox/Github/appliedr")
N <- 10#
DT <- data.table(#
  id = sample(c("id1","id2","id3"), N, TRUE),#
  v1 = sample(c(1:5), N, TRUE),#
  v2 = rnorm(N, sd = 20),#
  v3 = sample(runif(100, max=100), N, TRUE)#
)#
DT[, v4 := v3 + rnorm(N, sd = 20)]#
graph(DT)
devtools::load_all("/Users/Matthieu/Dropbox/Github/appliedr")
N <- 10#
DT <- data.table(#
  id = sample(c("id1","id2","id3"), N, TRUE),#
  v1 = sample(c(1:5), N, TRUE),#
  v2 = rnorm(N, sd = 20),#
  v3 = sample(runif(100, max=100), N, TRUE)#
)#
DT[, v4 := v3 + rnorm(N, sd = 20)]#
graph(DT)
`[[.data.table`
`data.table::[[.data.table`
`data.table:::[[.data.table`
N <- 10#
DT <- data.table(#
  id = sample(c("id1","id2","id3"), N, TRUE),#
  v1 = sample(c(1:5), N, TRUE),#
  v2 = rnorm(N, sd = 20),#
  v3 = sample(runif(100, max=100), N, TRUE)#
)#
DT[, v4 := v3 + rnorm(N, sd = 20)]#
graph(DT)
library(devtools)
library(data.table)
load_all("/Users/Matthieu/Dropbox/Github/appliedr")
library(data.table)#
N <- 10#
DT <- data.table(#
  id = sample(c("id1","id2","id3"), N, TRUE),#
  v1 = sample(c(1:5), N, TRUE),#
  v2 = rnorm(N, sd = 20),#
  v3 = sample(runif(100, max=100), N, TRUE)#
)#
DT[, v4 := v3 + rnorm(N, sd = 20)]#
graph(DT)#
graph(DT, by = id)#
graph(DT, by = id, facet = TRUE)#
graph(DT, by = id, type = "boxplot")#
graph(DT, v3, v4, along_with = v2)#
graph(DT, v3, v4, along_with = v2, by = id, type = "loess")
library(data.table)#
 N <- 100#
 DT <- data.table(#
   id = sample(c("id1","id2","id3"), N, TRUE),#
   v1 = sample(c(1:5), N, TRUE),#
   v2 = rnorm(N, sd = 20),#
   v3 = sample(runif(100, max=100), N, TRUE)#
 )#
 DT[, v4 := v3 + rnorm(N, sd = 20)]#
 graph(DT)#
 graph(DT, by = id)#
 graph(DT, by = id, facet = TRUE)#
 graph(DT, by = id, type = "boxplot")#
 graph(DT, v3, v4, along_with = v2)#
 graph(DT, v3, v4, along_with = v2, by = id, type = "loess")
release("/Users/Matthieu/Dropbox/Github/appliedr")
devtools::release("/Users/Matthieu/Dropbox/Github/statar")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
devtools::release("/Users/Matthieu/Dropbox/Github/statar")
library(data.table)#
library(reshape2)#
df <- data.table(#
    x = factor("a", levels = c("a", "b")),#
    y = factor("b", levels = c("a", "b")),#
    z = 1#
  )#
dcast(df, y~x, drop = FALSE)
dcast.data.table(df, y~x, drop = FALSE)
install_github("hadley/ggcom")
?bin_vector
install_github("hadley/ggcomp")
devtools::install_github("hadley/ggcomp")
devtools::install_github("rstudio/ggcomp")
library(ggcomp)
?bin_vector
install.packages("Rz")
?substitute
NA + 3
setwd("/Users/Matthieu/Dropbox/Symlink")#
devtools::install_github("matthieugomez/statar")#
#
suppressMessages(library("data.table"))#
suppressMessages(library("tidyr"))#
suppressMessages(library("dplyr"))#
suppressMessages(library("lazyeval"))#
suppressMessages(library("devtools"))#
#
suppressMessages(library("dplyr"))#
suppressMessages(library("reshape2"))#
suppressMessages(library("ggplot2"))#
suppressMessages(library("stringr"))#
suppressMessages(library("lubridate"))#
suppressMessages(library("pryr"))#
suppressMessages(library("lfe"))#
suppressMessages(library("biglm"))#
suppressMessages(library("foreign"))#
suppressMessages(library("stargazer"))#
suppressMessages(library("parallel"))#
suppressMessages(library("statar"))#
assignInNamespace("cedta.override",#
                  c(data.table:::cedta.override,"IRkernel"),#
                  "data.table")
setwd("/Users/Matthieu/Dropbox/Symlink")#
#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
setwd("/Users/Matthieu/Dropbox/Symlink")#
#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
setwd("/Users/Matthieu/Dropbox/Symlink")#
#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
setwd("/Users/Matthieu/Dropbox/Symlink")#
#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
?trans
setwd("/Users/Matthieu/Dropbox/Symlink")#
#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
lm(v2~v3+as.factor(id)+as.factor(v1), DT)
result_felm <- felm(v2~v3|id, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
result_felm(as.factor(v1))
tidy(lm(v2~v3+0+as.factor(id),DT))
result_felm <- felm(v2~v3|id, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE, N = 1000)
2*(1-pnorm(-1.838666))
?btrap
?getfe
2*(1-pnorm(abs(1.838666)))
2*(1-pt(abs(1.838666)))
2*(1-pt(abs(1.838666), df = 1000))
2*(1-pt(abs(1.838666), df = 100))
x$n
x
result_felm <- felm(v2~v3|id, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE, N = 1000)
-1725.855/(938.6454/sqrt(100))
-1725.855/(938.6454/sqrt(1000))
-1725.855/(938.6454/sqrt(10000))
-1725.855/(938.6454/sqrt(10))
-1725.855/(938.6454)
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)
setwd("/Users/Matthieu/Dropbox/Symlink")#
tidy(lm(v2~v3+as.factor(id)+0, DT))
?getfe
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)#
tidy(lm(v2~v3+as.factor(id)+0, DT))
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")#
N=1e2; K=100#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE), # numeric e.g. 23.5749#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id, DT)#
tidy(result_felm)#
tidy(result_felm, fe = TRUE)#
tidy(result_felm, fe = TRUE, conf.int = TRUE)#
tidy(lm(v2~v3+as.factor(id)+0, DT))
x <- result_felm
ret_fe <- getfe(x, se = TRUE, bN = 1000) %>%#
                  select(effect, se, obs, comp) %>%#
                  fix_data_frame(nn) %>%#
                  mutate(statistic = estimate/stderror) %>%#
                  mutate(p.value = 2*(1-pt(statistic, df = N)))
nn <- c("estimate", "stderror", "N", "comp")#
        ret_fe <- getfe(x, se = TRUE, bN = 1000) %>%#
                  select(effect, se, obs, comp) %>%#
                  fix_data_frame(nn) %>%#
                  mutate(statistic = estimate/stderror) %>%#
                  mutate(p.value = 2*(1-pt(statistic, df = N)))
ret_fe
nn <- c("estimate", "stderror", "N", "comp")#
        ret_fe <- getfe(x, se = TRUE, bN = 1000, robust = TRUE) %>%#
                  select(effect, se, obs, comp) %>%#
                  fix_data_frame(nn) %>%#
                  mutate(statistic = estimate/stderror) %>%#
                  mutate(p.value = 2*(1-pt(statistic, df = N)))
getfe(x, se = TRUE, bN = 1000, robust = TRUE)
getfe
?felm
?trans
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
?tidy.felm
?felm_tiders
?tidy
?lem4_tiders
?lme4_tiders
?lme4_tidiers
?felm_tidiers
?felm_tidiers
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
?felm_tiders
?felm_tydiers
?lem4_tydiers
?lme4_tydiers
?lme4_tidiers
?felm_tidiers
devtools::document("/Users/Matthieu/Dropbox/Github/broom")
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
?felm_tidiers
devtools::document("/Users/Matthieu/Dropbox/Github/broom")
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
?felm_tidiers
?lm_tidiers
?felm_tidiers
devtools::document("/Users/Matthieu/Dropbox/Github/broom")
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
?felm_tidiers
?lm_tidiers
?felm_tidiers
?lm_tidiers
?felm_tidiers
?felm_tidiers
devtools::document("/Users/Matthieu/Dropbox/Github/broom")
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
N=1e2#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          #
  v2 =  sample(1e6, N, TRUE),                        #
  v3 =  sample(round(runif(100,max=100),4), N, TRUE),#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) #
)#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm, fe = TRUE)#
augment(result_felm)#
v1<-DT$v1#
v2 <- DT$v2#
v3 <- DT$v3#
id <- DT$id#
result_felm <- felm(v2~v3|id+v1)#
tidy(result_felm)#
augment(result_felm)#
glance(result_felm)
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
N=1e2#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          #
  v2 =  sample(1e6, N, TRUE),                        #
  v3 =  sample(round(runif(100,max=100),4), N, TRUE),#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) #
)#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm, fe = TRUE)#
augment(result_felm)#
v1<-DT$v1#
v2 <- DT$v2#
v3 <- DT$v3#
id <- DT$id#
result_felm <- felm(v2~v3|id+v1)#
tidy(result_felm)#
augment(result_felm)#
glance(result_felm)
result_felm$r2
result_felm
summary(result_felm)$r2
summary(result_felm)$r2adh
summary(result_felm)$r2adj
summary(result_felm)$fstat
summary(result_felm)$pval
summary(result_felm)$df
summary(result_felm)$df.residual
summary(result_felm)$rdf
setwd("/Users/Matthieu/Dropbox/Symlink")#
load_all("/Users/Matthieu/Dropbox/Github/broom")
N=1e2#
DT <- data.frame(#
  id = sample(5, N, TRUE),#
  v1 =  sample(5, N, TRUE),                          #
  v2 =  sample(1e6, N, TRUE),                        #
  v3 =  sample(round(runif(100,max=100),4), N, TRUE),#
  v4 =  sample(round(runif(100,max=100),4), N, TRUE) #
)#
result_felm <- felm(v2~v3, DT)#
tidy(result_felm)#
augment(result_felm)#
result_felm <- felm(v2~v3|id+v1, DT)#
tidy(result_felm, fe = TRUE)#
augment(result_felm)#
v1<-DT$v1#
v2 <- DT$v2#
v3 <- DT$v3#
id <- DT$id#
result_felm <- felm(v2~v3|id+v1)#
tidy(result_felm)#
augment(result_felm)#
glance(result_felm)
devtools::document("/Users/Matthieu/Dropbox/Github/broom")
?stargazer
?merge
# test it more:#
    d1 <- data.table(a=rep(1:2,each=3), b=1:6, key="a,b")#
    d2 <- data.table(a=0:1, bb=10:11, key="a")#
    d3 <- data.table(a=0:1, key="a")#
    d4 <- data.table(a=0:1, b=0:1, key="a,b")
?erge
?nerge
?merge
merge(dt1,dt2)
dt1
merge(d1,d2)
sekey(d1,d2, by = "a")
merge(d1,d2, by = "a")
merge(d1,d2, by = "bb")
key(d1)
# test it more:#
    d1 <- data.table(a=rep(1:2,each=3), b=1:6)#
    d2 <- data.table(a=0:1, bb=10:11)#
    d3 <- data.table(a=0:1)#
    d4 <- data.table(a=0:1, b=0:1)
d1
merge(d1,d2)
setkey(d1, "a")
merge(d1,d2)
intersect("a", key(d2)
)
intersect("a", "b")
sekey(d1, a)
sekey(d2,bb)
setkey(d1, a)
setkey(d2,bb)
merge(d1,d2)
?merge
d1 <- data.table(a=rep(1:2,each=3), b=1:6, key = "a")#
 d2 <- data.table(a=0:1, bb=10:11, key = "bb")#
merge(d1,d2)
d1 <- data.table(a=rep(1:2,each=3), b=1:6, key = "a")#
 d2 <- data.table(a=0:1, bb=10:11, key = "bb")#
merge(d1,d2)
?merge
d1 <- data.table(a=rep(1:2,each=3), b=1:6, key = "a")#
 d2 <- data.table(a=0:1, bb=10:11, key = "bb")#
merge(d1,d2)
?merge
d1[d2]
?merge
?merge
by <- intersect(key(d1), key(d3))
by
by <- intersect(key(d1), key(d2))
by
by <- intersect(key(d1), key(d2))
byn <- intersect(key(d1), key(d3))
byn
length(byn)
by == character(0)
is.character(by)
is.character(NULL)
if (is.null(by)) {        #
         by <- intersect(key(x), key(y))               #
         if (is.character(by) && !length(by)) stop("x and y don't share keys with common names. Please rename columns of y or use x[y]")  #
     }
DT
demanlist(DT[,list(v2,v3)], as.factor(DT$id))
demeanlist(DT[,list(v2,v3)], as.factor(DT$id))
setwd("/Users/Matthieu/Dropbox/Symlink")#
N <- 2e6#
DT <- data.table(#
         date = sample(10, N, TRUE),#
           id = sample(1e5, N, TRUE),   #
        value = sample(c(NA,1:5), N, TRUE)                   #
      )
setwd("/Users/Matthieu/Dropbox/Symlink")#
N=1e4; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
demeanlist(DT[,list(v2,v3)], as.factor(DT$id))
demeanlist(as.matrix(DT[,list(v2,v3)]), as.factor(DT$id))
T[,list(v2,v3)]
DT[,list(v2,v3)]
DT$id
demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$id)))
demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$v1)))
setwd("/Users/Matthieu/Dropbox/Symlink")#
DT[, c("v2_m","v3_m":=list(mean(v2), mean(v3)), by = v1]#
DT[, c("v2_m","v3_m":=list(v2-v2_m, v3-v3_m), by = v1]
setwd("/Users/Matthieu/Dropbox/Symlink")#
demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$v1)))#
DT[, c("v2_m","v3_m"):=list(mean(v2), mean(v3)), by = v1]#
DT[, c("v2_m","v3_m"):=list(v2-v2_m, v3-v3_m), by = v1]
setwd("/Users/Matthieu/Dropbox/Symlink")#
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = 1:N,#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$v1)))#
DT[, c("v2_m","v3_m"):=list(mean(v2), mean(v3)), by = v1]#
DT[, c("v2_m","v3_m"):=list(v2-v2_m, v3-v3_m), by = v1]
system.time( M<- demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$v1))))#
system.time(DT[, c("v2_m","v3_m"):=list(mean(v2), mean(v3)), by = v1][, c("v2_m","v3_m"):=list(v2-v2_m, v3-v3_m)])
N=1e6; K=100#
set.seed(1)#
DT <- data.table(#
  id = sample(5, N/K, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)#
system.time( M<- demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$v1))))#
system.time(DT[, c("v2_m","v3_m"):=list(mean(v2), mean(v3)), by = v1][, c("v2_m","v3_m"):=list(v2-v2_m, v3-v3_m)])
system.time( M<- demeanlist(as.matrix(DT[,list(v2,v3)]), list(as.factor(DT$id))))#
system.time(DT[, c("v2_m","v3_m"):=list(mean(v2), mean(v3)), by = id][, c("v2_m","v3_m"):=list(v2-v2_m, v3-v3_m)])
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
#' Demean a vector#
#' #
#' @param n An integer (size of output)#
#' @param fromLast Should 1 be at the end?#
#' @return A vector of zeros except one subscript equal to one.#
#' @examples                        #
#' tag(2)#
#' tag(2, fromLast = TRUE)#
#' @export#
demean <- function(x, ...){#
	demeanlist(as.matrix(x), lapply(list(...),as.factor))#
}
demean(DT$v1,DT$id)
demeanlist(DT$v2, as.factor(DT$v1))
demeanlist(as.matrix(DT$v2), as.factor(DT$v1))
demean <- function(..., by){#
	print(as.matrix(...)#
}
demean <- function(..., by){#
	print(as.matrix(...))#
}
demeanlist(DT$v2, as.factor(DT$v1))
demean <- function(..., by){#
	print(as.matrix(...))#
}
as.matrix(c(1,2)
)
as.matrix(c(1,2,3)
)
demeanlist(DT$v2)
demean(DT$v2)
demean(DT$v2, DT$id)
setwd("/Users/Matthieu/Dropbox/Symlink")#
N=1e2; K=100#
set.seed(1)#
DT <- data.table(#
  id = sample(5, N/K, TRUE),#
  v1 =  sample(5, N, TRUE),                          # int in range [1,5]#
  v2 =  sample(1e6, N, TRUE),                        # int in range [1,1e6]#
  v3 =  sample(round(runif(100,max=100),4), N, TRUE) # numeric e.g. 23.5749#
)
demean <- function(..., by){#
	print(as.matrix(...))#
}
demean(DT$id,DT$v1)
demean <- function(..., by){#
	print(do.call(cbind,list(...))#
}
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(..., by){#
	print(do.call(cbind,list(...)))#
}
demean(DT$id,DT$v1)
demean <- function(..., by){#
	M <- do.call(cbind,list(...)))#
	demeanlist(M, lapply(by,as.factor))#
}
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(..., by){#
	M <- do.call(cbind,list(...))#
	demeanlist(M, lapply(by,as.factor))#
}
demean(DT$v2,DT$v3, by =list(DT$v1))
demeanlist(DT$v2, by= as.factor(DT$v1))
demeanlist(DT$v2,  as.factor(DT$v1))
demeanlist(DT$v2,  list(as.factor(DT$v1)))
demeanlist(as.matrix(DT$v2),  list(as.factor(DT$v1)))
demeanlist(as.matrix(DT$v2),  list(as.factor(DT$v1)))
demean <- function(..., fe){#
	M <- do.call(cbind,list(...))#
	demeanlist(M, lapply(by,as.factor))#
}
DT[, demean(v2,v3, fe= list(v1, id))]
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(..., fe){#
	M <- do.call(cbind,list(...))#
	as.list(demeanlist(M, lapply(by,as.factor)))#
}
DT[, demean(v2,v3, fe= list(v1, id))]
demean <- function(..., fe){#
	M <- do.call(cbind,list(...))#
	as.data.frame(demeanlist(M, lapply(by,as.factor)))#
}
DT[, demean(v2,v3, fe= list(v1, id))]
DT[,c("v2_demean","v3_demean") := demean(v2,v3, fe= list(v1, id))]
DT
demean <- function(..., fe){#
	M <- do.call(cbind,list(...))#
	as.data.frame(demeanlist(M, lapply(fe,as.factor)))#
}
demean <- function(..., fe){#
	M <- do.call(cbind,list(...))#
	as.data.frame(demeanlist(M, lapply(fe,as.factor)))#
}
DT[,c("v2_demean","v3_demean") := demean(v2,v3, fe= list(v1, id))]
DT
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	as.data.frame(demeanlist(x, lapply(fe,as.factor)))#
}
DT[,c("v2_demean") := demean(v2, fe= list(v1, id))]
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	x <- as.matrix(x)#
	as.data.frame(demeanlist(x, lapply(fe,as.factor)))#
}
DT[,c("v2_demean") := demean(v2, fe= list(v1, id))]
as.matrix(DT$v2)
traceback
DT[,c("v2_demean") := demean(v2, fe= list(v1, id))]
traceback()
demeanlist(DT$v2, as.factor(DT$v1))
demeanlist(DT$v2, list(as.factor(DT$v1)))
demeanlist(cbind(DT$v2,DT$v3), list(as.factor(DT$v1)))
demeanlist(cbind(DT$v2), list(as.factor(DT$v1)))
demeanlist(DT$v2, list(as.factor(DT$v1)))
traceback()
demeanlist
demeanlist(list(DT$v2), list(as.factor(DT$v1)))
is.list(rbind(DT$v2,DT$v3))
demeanlist(list(DT$v2, DT$v3), list(as.factor(DT$v1)))
demeanlist(list(rbind(DT$v2, DT$v3)), list(as.factor(DT$v1)))
demeanlist(rbind(DT$v2, DT$v3), list(as.factor(DT$v1)))
demeanlist(cbind(DT$v2, DT$v3), list(as.factor(DT$v1)))
demeanlist(list(cbind(DT$v2, DT$v3)), list(as.factor(DT$v1)))
demeanlist
# tempname#
tempname=function(where = globalenv() , n = 1, prefix = "temp") {#
    all_names <- NULL#
    i <- 0L#
    name <- prefix#
    while (n>0){#
        i <- i + 1L#
        while (exists(name, where = where, inherits = inherits)){#
        name <- paste0(prefix, as.character(i))#
        i <- i + 1L#
       }#
       all_names <- c(all_names, name)#
            name <- paste0(prefix, as.character(i))#
            n <- n-1#
        }#
    }#
    all_names#
}#
#
# then write the mean function#
f <- function(DT, cols, by = bycols){#
  c <- tempname(DT, length(cols))#
  newnames <- c(bycols, tempname)#
  setnames(DT[, lapply(.SD,mean), by = c(bycols), .SD = cols), newnames)#
}
tempname=function(where = globalenv() , n = 1, prefix = "temp") {#
    all_names <- NULL#
    i <- 0L#
    name <- prefix#
    while (n>0){#
        i <- i + 1L#
        while (exists(name, where = where, inherits = inherits)){#
            name <- paste0(prefix, as.character(i))#
            i <- i + 1L#
       }#
      all_names <- c(all_names, name)#
      name <- paste0(prefix, as.character(i))#
      n <- n-1#
   }#
all_names#
}#
#
# then write the mean function#
f <- function(DT, cols, by = bycols){#
  c <- tempname(DT, length(cols))#
  newnames <- c(bycols, tempname)#
  setnames(DT[, lapply(.SD,mean), by = c(bycols), .SD = cols), newnames)#
}
f <- function(DT, cols, bycols){#
  c <- tempname(DT, length(cols))#
  newnames <- c(bycols, tempname)#
  setnames(DT[, lapply(.SD,mean), by = c(bycols), .SD = cols), newnames)#
}
tempname=function(where = globalenv() , n = 1, prefix = "temp") {#
    all_names <- NULL#
    i <- 0L#
    name <- prefix#
    while (n>0){#
        i <- i + 1L#
        while (exists(name, where = where, inherits = inherits)){#
            name <- paste0(prefix, as.character(i))#
            i <- i + 1L#
       }#
      all_names <- c(all_names, name)#
      name <- paste0(prefix, as.character(i))#
      n <- n-1#
   }#
all_names#
}
f <- function(DT, cols, bycols){#
  c <- tempname(DT, length(cols))#
  newnames <- c(bycols, tempname)#
  setnames(DT[, lapply(.SD,mean), by = c(bycols), .SD = cols), newnames)#
}
f <- function(DT, cols, bycols){#
  c <- tempname(DT, length(cols))#
  newnames <- c(bycols, tempname)#
  setnames(DT[, lapply(.SD,mean), by = c(bycols), .SD = c(cols))], newnames)#
}
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
#
f <- function(DT, cols, bycols){#
  c <- tempname(DT, length(cols))#
  newnames <- c(bycols, tempname)#
  setnames(DT[, lapply(.SD,mean), by = c(bycols), .SD = c(cols)], newnames)#
}
DT$tempname
f <- function(DT, col, bycols){#
  tempname <- tempname(DT,1)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], newnames)#
 ans <- as.vector(DT[, tempname, with = FALSE])#
DT[ans]#
}
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], newnames)#
 ans <- as.vector(DT[, tempname, with = FALSE])#
DT[ans]#
}
DT
f(DT, "v2", "id")
tempname=function(where = globalenv() , n = 1, prefix = "temp") {#
    all_names <- NULL#
    i <- 0L#
    name <- prefix#
    while (n>0){#
        i <- i + 1L#
        while (exists(name, where = where)){#
            name <- paste0(prefix, as.character(i))#
            i <- i + 1L#
       }#
      all_names <- c(all_names, name)#
      name <- paste0(prefix, as.character(i))#
      n <- n-1#
   }#
all_names#
}
f(DT, "v2", "id")
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], c(bycols,tempname))#
 ans <- as.vector(DT[, tempname, with = FALSE])#
DT[ans]#
}
f(DT, "v2", "id")
?data.table
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], c(bycols,tempname))#
 ans <- as.vector(ans[, tempname, with = FALSE])#
DT[ans]#
}
f(DT, "v2", "id")
DT[, "v2", with = FALSE]
as.vector(DT[, "v2", with = FALSE])
is.data.table(DT[, "v2", with = FALSE])
as.vector(DT[, "v2", with = FALSE])
is.data.table(as.vector(DT[, "v2", with = FALSE]))
is.data.table(as.atomic(DT[, "v2", with = FALSE]))
as.matrix(DT[, "v2", with = FALSE])
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], c(bycols,tempname))#
 ans <- as.matrix(ans[, tempname, with = FALSE])#
DT[ans]#
}
f(DT, "v2", "id")
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], c(bycols,tempname))#
 ans <- as.vector(as.matrix(ans[, tempname, with = FALSE]))#
DT[ans]#
}
f(DT, "v2", "id")
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], c(bycols,tempname))#
 ans <- as.vector(as.matrix(ans[, tempname, with = FALSE]))#
print(ans)#
DT[ans]#
}
f(DT, "v2", "id")
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[max(get(col))], by = c(bycols)], c(bycols,tempname))#
print(ans)#
 ans <- as.vector(as.matrix(ans[, tempname, with = FALSE]))#
print(ans)#
DT[ans]#
}
f(DT, "v2", "id")
f(DT, "v2", "v2")
f(DT, "v2", "v1")
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I(max(get(col))), by = c(bycols)], c(bycols,tempname))#
print(ans)#
 ans <- as.vector(as.matrix(ans[, tempname, with = FALSE]))#
print(ans)#
DT[ans]#
}
f(DT, "v2", "v1")
f <- function(DT, col, bycols){#
  tempname <- tempname(DT)#
  ans <- setnames(DT[, .I[get(col)==max(get(col))], by = c(bycols)], c(bycols,tempname))#
print(ans)#
 ans <- as.vector(as.matrix(ans[, tempname, with = FALSE]))#
print(ans)#
DT[ans]#
}
f(DT, "v2", "v1")
evaldt(DT[, list(.v3 = weighted.mean(.v1, w = .v2)])))
evaldt(DT[, list(.v3 = weighted.mean(.v1, w = .v2))]))
evaldt(DT[, list(.v3 = weighted.mean(.v1, w = .v2))])
eval(substitute(DT[, .v3 = weighted.mean(.v1, w = .v2)]), list(.v3 = as.name(v3), .v2 = as.name(v2), .v1 = as.name(v1))
)
?weighted.mean
demeanlist(c(1,2), as.factor(c(1,1))
)
demeanlist(c(1,2), list(as.factor(c(1,1))))
demeanlist(DT$v2, list(as.factor(DT$v1)))
v <- DT$v2
demeanlist(v, list(as.factor(DT$v1)))
demeanlist(vdemean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	eval(substitute(demeanlist(x, lapply(fe,as.factor))))#
}#
, list(as.factor(DT$v1)))
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	eval(substitute(demeanlist(x, lapply(fe,as.factor))))#
}
demean(DT$v2,DT$v1)
demeanlist(c(1,2), as.factor(c(1,1)))
demeanlist(c(1,2), list(as.factor(c(1,1))))
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	fe <-  lapply(fe,as.factor)#
	demeanlist(x,fe))#
}
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	fe <-  lapply(fe,as.factor)#
	demeanlist(x,fe)#
}
demeanlist(c(1,2), list(as.factor(c(1,1))))
demean(DT$v2,DT$v1)
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	fe <-  lapply(fe, as.factor)#
	print(fe)#
	demeanlist(x,fe)#
}
demean(DT$v2,DT$v1)
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	fe <-  apply(fe, 1, as.factor)#
	print(fe)#
	demeanlist(x,fe)#
}
demean(DT$v2,DT$v1)
ncols(c(1,2))
nrow(c(1,2))
length(c(1,2))
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- as.factor(fe)#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	print(fe)#
	demeanlist(x,fe)#
}
demean(DT$v2,DT$v1)
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- as.factor(fe)#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	fe <- as.list(fe)#
	demeanlist(x,fe)#
}
demean(DT$v2,DT$v1)
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- as.factor(fe)#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	call <- as.call(list(quote(list), fe))#
	eval(substitute(demeanlist(x,call)))#
}
demean(DT$v2,DT$v1)
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- as.factor(fe)#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	call <- as.call(list(quote(list), fe))#
	print(call)#
	eval(substitute(demeanlist(x,call)))#
}
demean(DT$v2,DT$v1)
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- as.factor(fe)#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	call <- as.call(list(quote(list), quote(fe)))#
	print(call)#
	eval(substitute(demeanlist(x,call)))#
}
demean(DT$v2,DT$v1)
setwd("/Users/Matthieu/Dropbox/Github/statar/R")#
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- as.factor(fe)#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	demeanlist(x, list(fe))#
}
demean(DT$v2,DT$v1)
demeanlist(c(1,2), list(as.factor(c(1,1))))
v <- as.factor(c(1,1))
demeanlist(c(1,2), v)
demeanlist(c(1,2), v)
v
demeanlist(c(1,2), v)
demeanlist
demeanlist(c(1,2), list(as.factor(c(1,1))))
v <- list(as.factor(c(1,1)))
demeanlist(c(1,2), v)
v <- list(as.factor(c(1,1)), as.factor(c(1,2)))
demeanlist(c(1,2), v)
demean <- function(x, fe){#
	#M <- do.call(cbind,list(...))#
	if (is.atomic(fe)){#
		fe <- list(as.factor(fe))#
	} else{#
		fe <-  lapply(fe, as.factor)#
	}#
	demeanlist(x, fe)#
}
demeanlist(c(1,2), v)
demean(DT$v2,DT$v1)
demean(c(1,2),c(1,1))
DT$v2
demean(c(1,2,3),c(1,1,5))
DT$v1
demeanlist(c(1,2),c(1,1))
demeanlist(c(1,2),list(c(1,1))(
)
)
DT$v1
is.integer(DT$v1)
demean(c(353198,270261), list(as.factor(c(2,3))))
demean(c(353198,270261), list(as.factor(c(2,2))))
demeanlist(c(353198,270261), list(as.factor(c(2,2))))
demeanlist(c(353198,270261), as.factor(c(2,2)))
demeanlist(c(353198,270261), list(as.factor(c(2,2))))
demean(DT$v2,DT$v1)
is.atomic(DT$v1)
fe <- list(as.factor(DT$v1))
demeanlist(DT$v2,fe)
demeanlist(rep(1,100),fe)
demeanlist(rep(1.5,100),fe)
DT$v2
is.numeric(DT$v2(
)
)
is.numeric(DT$v2)
demeanlist(as.double(DT$v2),fe)
demeanlist(c(1L,2L), list(c(1L,1L))
)
demeanlist(c(1L,2L), list(as.factor(c(1L,1L)))
)
demeanlist(c(1,2), list(as.factor(c(1L,1L)))
)
demeanlist(c(1,2), list(c(1L,1L))
)
