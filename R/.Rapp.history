DT[is.na("v3"),"v3":=4]
DT[is.na("v3")]
DT[is.na("v3"),]
DT[!is.na("v3"),]
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(by,ansvars))#
        ans <- DT[, seq.int(get(ansvars)[1L], get(ansvars)[.N]), by = by]#
        setnames(ans,"V1",ansvars)#
        setkeyv(ans,c(by,ansvars))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match=str_match(func,"(\\-|\\+)([0-9]*)(.*)"))#
     if (!is.na(match[1,1)){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(paste0(timevar,match[1,2],match[1,3])#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(sub(operation)),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(by,ansvars))#
        ans <- DT[, seq.int(get(ansvars)[1L], get(ansvars)[.N]), by = by]#
        setnames(ans,"V1",ansvars)#
        setkeyv(ans,c(by,ansvars))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match=str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1)){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(paste0(timevar,match[1,2],match[1,3])#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(sub(operation)),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
str_match
str_match("L3ok","(\\-|\\+)([0-9]*)(.*)")
str_match("-3ok","(\\-|\\+)([0-9]*)(.*)")
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(by,ansvars))#
        ans <- DT[, seq.int(get(ansvars)[1L], get(ansvars)[.N]), by = by]#
        setnames(ans,"V1",ansvars)#
        setkeyv(ans,c(by,ansvars))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(paste0(timevar,match[1,2],match[1,3])#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(sub(operation)),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(by,ansvars))#
        ans <- DT[, seq.int(get(ansvars)[1L], get(ansvars)[.N]), by = by]#
        setnames(ans,"V1",ansvars)#
        setkeyv(ans,c(by,ansvars))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3])#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(by,ansvars))#
        ans <- DT[, seq.int(get(ansvars)[1L], get(ansvars)[.N]), by = by]#
        setnames(ans,"V1",ansvars)#
        setkeyv(ans,c(by,ansvars))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %>%panel(fill,"id1 id2","year")
DT %>%panel(fill,"id1 id2","year")
DT %>%panel("id1 id2","year","fill")
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
panel=function(DT,ids,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), idvars = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year","fill")
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    timevar=time#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), idvars = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year","fill")
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    timevar=time#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year","fill")
DT
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(ids))) stop("Some items of ids are NA)")#
    if (any(!ids %chin% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
    timevar=time#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT
DT %>%panel("id1 id2","year","fill")
DT
DT %>%panel("id1 id2","year",fill)
DT
fun="fill"
func=as.character(subs(fun))
func
func=as.character(quote(func))
func
func=as.character(quote(fill))
func
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,ids,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
    idsub = substitute(ids)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        ids = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(ids)) stop("ids should be idumn numbers or names")#
    if (any(is.na(idchins))) stop("Some items of ids are NA)")#
    if (any(!ids %% names(DT))){#
        #try wildcard #
        if (length(ids) !=1L) stop("Some items of ids are not idumn names")#
        ids_vector <- strsplit(ids, "\\s+")[[1]]#
        ids=NULL#
         for (c in ids_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            ids <- c(ids,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), ids) else idvars = ids#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %% names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(ids, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(ids, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
debug(panel)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %>%panel("id1 id2","year",fill)
idvars
timevar
ans
ans
DT
DT
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, timevar=seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, timevar=seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, timevar=seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,:=,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, timevar=seq.int(get(timevar)[1L], get(timevar)[.N]), by = idvars]#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- DT[, list(get(timevar)=seq.int(get(timevar)[1L], get(timevar)[.N])), by = idvars]#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t)=seq.int(t)[1L], t)[.N])), by = idvars],list(t=as.name(timevar)))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t=seq.int(t)[1L], t)[.N])), by = idvars],list(t=as.name(timevar)))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],list(t=as.name(timevar)))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],list(t=as.name(timevar)))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t=seq.int(t[1L], t[.N]))), by = idvars],list(t=as.name(timevar)))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT
DT[, list(year=seq.int(year[1L], year[.N]))), by = idvars]
DT[, list(year=seq.int(year[1L], year[.N])), by = idvars]
DT[, list(year=seq.int(year[1L], year[.N])), by = id1]
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],list(t=as.name(timevar))))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
DT
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        ans <- eval(substitute(DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],list(t=as.name(timevar))))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
debug(panel)
DT %>%panel("id1 id2","year",fill)
timevar
timevar
idvars
DT %>%panel("id1 id2","year",fill)
ans
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
       eval(substitute( ans <- DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],list(t=as.name(timevar))))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
       eval(substitute( ans <- DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],list(t=as.name(timevar))))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
       setkeyv(DT,c(idvars,timevar))#
       eval(substitute( ans <- DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],#
        list(t=as.name(timevar))))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
debug(panel)
DT %>%panel("id1 id2","year",fill)
substitute( ans <- DT[, list(t=seq.int(t[1L], t[.N])), by = idvars],#
        list(t=as.name(timevar)))
DT
DT[,list("ok"=1)]
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
       setkeyv(DT,c(idvars,timevar))#
       eval(substitute( ans <- DT[, list(timevar=seq.int(t[1L], t[.N])), by = idvars],#
        list(t=as.name(timevar))))#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT[,list(ok"=1)]
"
DT[,list("ok"=1)]
DT[,list("ok"=1)]
DT[,list(ok=1)]
DT[,list(ok=1)]
ok="nonok"
DT[,list(ok=1)]
DT[,list(c(ok)=1)]
eval(subs(list(v=seq(1,.N)),list(v=x))
)
list(x=seq(1,.N))
x=ok
x="xx"
list(c(x)=seq(1,.N))
list(get("x")=seq(1,.N))
list(eval(x)=seq(1,.N))
list(eval(x)=seq(1,.N)))
eval(subs(list(v=seq(1,.N)),list(v=x))
)
DT$V1
DT
DT[,V1:=3]
DT$V1
DT[,list(mean(id1))]
DT[,list(mean(id1)),by=V1]
?setname
?setnames
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
       setkeyv(DT,c(idvars,timevar))#
       eval(substitute( ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
        setnames(ans,"V1","timevar")#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute( ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT<-DT[ans,v:=1,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setnames(ans,"V1",timevar)
setnames(DT,"V1",timevar)
setkeyv(ans,c(idvars,timevar))
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute( ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=NULL,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute( ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=NULL,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(sub(ans <- DT[, list(seq.int([1L], t[.N])), by = idvars],list(t=as.name(timevar)))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=NULL,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(ans <- DT[, list(seq.int([1L], t[.N])), by = idvars],list(t=as.name(timevar))))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=NULL,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int([1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=NULL,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=NULL,allow.cartesian=TRUE]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=1,allow.cartesian=TRUE]#
        DT[V1:=NULL]#
#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=1,allow.cartesian=TRUE]#
        DT[,V1:=NULL]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
DT
DT
debug(panel)
DT %>%panel("id1 id2","year",fill)
ans
DT
DT
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans,V1:=1,allow.cartesian=TRUE,nomatch=0]#
        DT[,V1:=NULL]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %>%panel("id1 id2","year",fill)
DT
DT
DT
DT %>%panel("id1 id2","year",fill)
DT %>%panel("id1 id2","year",fill)
DT
?nomatch
?"[.data.table"
DT
DT[id:=1]
DT[J(id1),id4:=1]
DT[J(id1),id4:=1,allow.cartesian=TRUE]
DT
?setnames
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
setkey(DT, id1,id2,year)
DT
ans = DT[, list(year = seq.int(year[1L], year[.N])), by = list(id1,id2)]
setkey(ans)[DT, `:=`(value = i.value, v = 1L)]
DT
?inner_join
DT
DT %<>%panel("id1 id2","year",fill)
DT
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be idumn numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not idumn names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not idumn names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,"V1",timevar)#
        setkeyv(ans,c(idvars,timevar))#
        ans[DT]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",fill)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",fill)
DT
DT %<>%panel("id1 id2","year",fill)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        ans[DT]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT
DT %<>%panel("id1 id2","year",fill)
DT
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        DT[ans]#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",fill)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
debug(panel)
DT %<>%panel("id1 id2","year",fill)
ans
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
    func=as.character(substitute(fun))#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",fill)
traceback()
debug(panel)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",fill)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",L3)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",L3)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",L3)
match
DT %<>%panel("id1 id2","year",+3)
DT %<>%panel("id1 id2","year",+3)
DT %<>%panel("id1 id2","year",+3)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",+3)
match
func
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= deparse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",+3)
?deparse
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(\\-|\\+)([0-9]*)(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= parse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",+3)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=NULL){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(L|F)([0-9]*)\\.(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,3]#
        if (match[1,2]=="L") match[1,2]=="+" else match[1,2]=="-"#
        if (length(gen)) newname=gen else  newname=paste0(match[1,2],match[1,3])#
        operation= parse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",+3)
DT
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
debug(panel)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",+3)
match
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",F3.value)
match
valuevar
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=func){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(L|F)([0-9]*)\\.(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,4]#
        if (match[1,2]=="L") match[1,2]=="+" else match[1,2]=="-"#
        operation= parse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=func){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(L|F)([0-9]*)\\.(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,4]#
        if (match[1,2]=="L") match[1,2]=="+" else match[1,2]=="-"#
        operation= parse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
DT %<>%panel("id1 id2","year",F3.value)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=func){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(L|F)([0-9]*)\\.(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,4]#
        if (match[1,2]=="L") match[1,2]="+" else match[1,2]="-"#
        operation= parse(text=paste0(timevar,match[1,2],match[1,3]))#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
        DT1 <- DT1[,timevar := eval(operation),.SDcols=timevars]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",F3.value)
setwd("/Users/Matthieu/Dropbox/Github/stataR/R")#
#
panel=function(DT,id,time,fun,gen=func){#
#
    func=paste(as.character(substitute(fun)),collapse="")#
    timevar=as.character(substitute(time))#
#
    idsub = substitute(id)#
    if (is.call(idsub) && idsub[[1L]] == "-") {#
        idm = TRUE#
        id = eval(idsub[[2L]], parent.frame(), parent.frame())#
    } else idm = FALSE#
    if (!is.character(id)) stop("ids should be column numbers or names")#
    if (any(is.na(id))) stop("Some items of ids are NA)")#
    if (any(!id %chin%  names(DT))){#
        #try wildcard #
        if (length(id) !=1L) stop("Some items of ids are not column names")#
        id_vector <- strsplit(id, "\\s+")[[1]]#
        id=NULL#
         for (c in id_vector){#
            temp <- grep(glob2rx(c),names(DT),value=TRUE)#
            if (!length(temp)) stop("Some items of ids are not column names")#
            id <- c(id,temp)#
        }#
    }#
#
    if (idm) idvars = setdiff(names(DT), id) else idvars = id#
    if (func=="fill"){#
        setkeyv(DT,c(idvars,timevar))#
        eval(substitute(#
            ans <- DT[, list(seq.int(t[1L], t[.N])), by = idvars],#
            list(t=as.name(timevar))#
            ))#
        setnames(ans,c(idvars,timevar))#
        setkeyv(ans,c(idvars,timevar))#
        return(DT[ans])#
    }#
    match <- str_match(func,"(L|F)([0-9]*)\\.(.*)")#
     if (!is.na(match[1,1])){#
        valuevar=match[1,4]#
        setkeyv(DT,c(idvars,timevar))#
        DT1 <- DT[,c(idvars,timevar,valuevar), with=FALSE]#
#
        if (match[1,2]=="L") operation="+" else operation="-"#
        operation= parse(text=paste0(timevar,operation,match[1,3]))#
        DT1[,(timevar):= eval(operation)]#
        DT[DT1,newname:=i.valuevar]#
    }#
}
DT %<>%panel("id1 id2","year",F3.value)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
debug(paste)
DT %<>%panel("id1 id2","year",F3.value)
DT = data.table(id1 = c(33,33,33,32,32),#
                id2 = c(29,29,29,28,28),  #
               year = c(1990,1993,1994,1991,1992),#
              value = c(3.5,3.3,3.1,3.1,4.5))
debug(paste)
DT %>% panel("id1 id2","year",F3.value)
DT %>% panel("id1 id2","year",F3.value)
DT %>% panel("id1 id2","year",F3.value)
panel)
panel)
